openapi: 3.0.0
info:
  title: REST API
  description: The REST API is used for all API interactions with DataCite services.
  contact:
    name: DataCite Support
    url: 'https://support.datacite.org'
    email: support@datacite.org
  license:
    name: MIT
    url: 'https://raw.githubusercontent.com/datacite/lupo/master/LICENSE'
  version: 2.3.0
servers:
  - url: https://api.datacite.org
    description: Production server
  - url: https://api.test.datacite.org
    description: Staging server
paths:
  /client-prefixes:
    get:
      summary: Returns a list of client-prefixes.
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: number
        - in: query
          name: client-id
          schema:
            type: string
        - in: query
          name: prefix-id
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: sort
          schema:
            type: string
            enum: [name, -name, created, -created]
      responses:
        '200':
          description: A JSON array of client-prefixes.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ClientPrefix'
  /clients:
    get:
      summary: Returns a list of clients.
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: number
        - in: query
          name: provider-id
          schema:
            type: string
        - in: query
          name: software
          schema:
            type: string
            enum: [ckan, dataverse, dspace, eprints, escidoc, fedora, invenio, mysql, nesstar]
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: sort
          schema:
            type: string
            enum: [relevance, name, -name, created, -created]
      responses:
        '200':
          description: A JSON array of clients.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Client'
    post:
      summary: Add a new client.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Created
              
  /clients/{id}:
    parameters:
      - name: id
        in: path
        description: Client ID
        required: true
        schema:
          type: string
    get:
      summary: Returns a client.
      responses:
        '200':
          description: A JSON object.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      summary: Update a client.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a client.
      responses:
        '204':
          description: No content
  /dois:
    get:
      summary: Return a list of dois.
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: created
          schema:
            type: number
        - in: query
          name: registered
          schema:
            type: number
        - in: query
          name: provider-id
          schema:
            type: string
        - in: query
          name: client-id
          schema:
            type: string
        - in: query
          name: person-id
          schema:
            type: string
        - in: query
          name: resource-type-id
          schema:
            type: string
        - in: query
          name: subject
          schema:
            type: string
        - in: query
          name: schema-version
          schema:
            type: string
        - in: query
          name: random
          schema:
            type: boolean
        - in: query
          name: sample-size
          schema:
            type: number
        - in: query
          name: sample-group
          schema:
            type: string
            enum: [client, provider, resource-type]
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: sort
          schema:
            type: string
            enum: [relevance, name, -name, created, -created, updated, -updated]
      responses:
        '200':
          description: A JSON array of dois.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Doi'
    post:
      summary: Add a new doi.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Doi'
      responses:
        '201':
          description: Created
          
  /dois/{id}:
    parameters:
    - name: id
      in: path
      description: DOI
      required: true
      schema:
        type: string
    get:
      summary: Returns a doi.
      responses:
        '200':
          description: A JSON object.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Doi'
    put:
      summary: Update a doi.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Doi'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a doi.
      responses:
        '204':
          description: No content
                
  /heartbeat:
    get:
      description: This resource returns the current status of the REST API.
      responses:
        '200':
          description: REST API is operating normally.
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '500':
          description: REST API is not working properly.
          content:
            text/plain:
              schema:
                type: string
                example: failed
  /prefixes:
    get:
      responses:
        '200':
          description: A JSON array of prefixes.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Prefix'
  /prefixes/{id}:
    get:
      summary: A prefix.
      parameters:
        - name: id
          in: path
          description: DOI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a prefix.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Prefix'
  /provider-prefixes:
    get:
      summary: A JSON array of provider-prefixes.
      responses:
        '200':
          description: A JSON array of provider-prefixes.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProviderPrefix'
  /providers:
    get:
      summary: A JSON array of providers.
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: year
          schema:
            type: number
        - in: query
          name: region
          schema:
            type: string
            enum: [amer, apac, emea]
        - in: query
          name: organization-type
          schema:
            type: string
            enum: [academicInstitution, academicLibrary, governmentAgency, nationalInstitution, nationalLibrary, publisher, professionalSociety, researchInstitution, serviceProvider, vendor]
        - in: query
          name: focus-area
          schema:
            type: string
            enum: [amer, apac, emea]
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: sort
          schema:
            type: string
            enum: [relevance, name, -name, created, -created]
      responses:
        '200':
          description: A JSON array of prefixes.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
    post:
      summary: Add a new provider.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider'
      responses:
        '201':
          description: Created
  /providers/{id}:
    parameters:
      - name: id
        in: path
        description: DOI
        required: true
        schema:
          type: string
    get:
      summary: A provider.
      responses:
        '200':
          description: A JSON object.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider'
    put:
      summary: Update a provider.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete a provider.
      responses:
        '204':
          description: No content

components:
  schemas:
    Client:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            name:
              type: string
            symbol:
              type: string
            contactName:
              type: string
            contactEmail:
              type: string
            description:
              type: string
            domains:
              type: string
            url:
              type: string
            created:
              type: string
            updated:
              type: string
      required:  
        - id
        - attributes
          - name
          - symbol
          - contactName
          - contactEmail
      example:
        id: tib.pangaea
        attributes:
          name: Pangaea
    ClientPrefix:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            created:
              type: string
            updated:
              type: string
      required:  
        - id
    Doi:
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            doi:
              type: string
            prefix:
              type: string
            suffix:
              type: string
            identifiers:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                  identifierType:
                    type: string
            creators:
              type: array
              items: 
                type: object
                properties:
                  nameType:
                    type: string
                  nameIdentifiers:
                    type: array
                    items: 
                      type: object
                      properties:
                        nameIdentifier:
                          type: string
                        nameIdentifierScheme:
                          type: string
                  name:
                    type: string
                  givenName:
                    type: string
                  familyName:
                    type: string
                  affiliation:
                    type: string
            titles:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  titleType:
                    type: string
                  lang:
                    type: string
            publisher:
              type: string
            container:
              type: object
              properties:
                type: 
                  type: string
                identifier:
                  type: string
                identifierType:
                  type: string
                title:
                  type: string
                volume:
                  type: string
                issue:
                  type: string
                firstPage:
                  type: string
                lastPage:
                  type: string
            publicationYear:
              type: number
            subjects:
              type: array
              items: 
                type: object
                properties:
                  subject:
                    type: string
                  subjectScheme:
                    type: string
                  schemeUri:
                    type: string
                  valueUri:
                    type: string
                  lang:
                    type: string
            contributors:
              type: array
              items: 
                type: object
                properties:
                  nameType:
                    type: string
                  nameIdentifiers:
                    type: array
                    items: 
                      type: object
                      properties:
                        nameIdentifier:
                          type: string
                        nameIdentifierScheme:
                          type: string
                  name:
                    type: string
                  givenName:
                    type: string
                  familyName:
                    type: string
                  affiliation:
                    type: string
                  contributorType:
                    type: string
            dates:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                  dateType:
                    type: string
            language:
              type: string
            types:
              type: object
              properties:
                resourceTypeGeneral:
                  type: string
                resourceType:
                  type: string
                schemaOrg:
                  type: string
                bibtex:
                  type: string
                citeproc:
                  type: string
                ris:
                  type: string
            relatedIdentifiers:
              type: array
              items:
                type: object
                properties:
                  relatedIdentifier:
                    type: string
                  relatedIdentifierType:
                    type: string
                  relationType:
                    type: string
                  resourceTypeGeneral:
                    type: string
            sizes:
              type: array
              items:
                type: string
            formats:
              type: array
              items:
                type: string
            version:
              type: string
            rightsList:
              type: array
              items:
                type: object
                properties:
                  rights:
                    type: string
                  rightsUri:
                    type: string
                  lang:
                    type: string
            descriptions:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                  descriptionType:
                    type: string
                  lang:
                    type: string
            geoLocations:
              type: array
              items:
                type: object
                properties:
                  geoLocationPoint:
                    type: object
                  geoLocationBox:
                    type: object
                  geoLocationPlace:
                    type: string
            fundingReferences:
              type: array
              items:
                type: object
                properties:
                  funderName:
                    type: string
                  funderIdentifier:
                    type: string
                  funderIdentifierType:
                    type: string
                  awardNumber:
                    type: string
                  awardUri:
                    type: string
                  awardTitle:
                    type: string
            url:
              type: string
            contentUrl:
              type: array
              items:
                type: string
            metadataVersion:
              type: number
            schemaVersion:
              type: string
            source:
              type: string
            isActive:
              type: boolean
            state:
              type: string
            reason:
              type: string
            landingPage:
              type: object
              properties:
                checked:
                  type: string
                url:
                  type: string
                contentType:
                  type: string
                error:
                  type: string
                redirectCount:
                  type: number
                redirectUrls:
                  type: array
                  items:
                    type: string
                downloadLatency:
                  type: number
                hasSchemaOrg:
                  type: boolean
                schemaOrgid:
                  type: string
                dcIdentifier:
                  type: string
                citationDoi:
                  type: string
                bodyhasPid:
                  type: boolean
            created:
              type: string
            registered:
              type: string
            updated:
              type: string
      required:
        - id
        - attributes
          - doi
          - creators
          - titles
          - publisher
          - publicationYear
      example:
        id: 10.5438/0014
        type: dois
        attributes:
          doi: 10.5438/0014
          prefix: 10.5438
          suffix: 0014
          identifiers:
            - identifier: https://doi.org/10.5438/0014
              identifierType: DOI
          creators:
            - name: DataCite Metadata Working Group
          titles:
            - title: DataCite Metadata Schema Documentation for the Publication and Citation of Research Data v4.1
          publisher: DataCite
          publicationYear: 2017
    Prefix:
      properties:
        prefix:
          type: string
      required:
        - prefix
    ProviderPrefix:
      properties:
        id:
          type: string
        attributes:
          type: object
          properties:
            created:
              type: string
            updated:
              type: string
      required:
        - id
    Provider:
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
      required:
        - id
        - attributes
          - name
          - symbol
      example:
        id: bl
        attributes:
          name: British Library
          symbol: BL
    
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT  
security:
  - BasicAuth: []
  - bearerAuth: []
