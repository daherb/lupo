---
http_interactions:
- request:
    method: get
    uri: https://api.ror.org/organizations
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.2.1; +https://github.com/datacite/maremma)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Content-Length:
      - '25437'
      Connection:
      - keep-alive
      Date:
      - Sun, 05 May 2019 11:14:01 GMT
      Status:
      - 200 OK
      Access-Control-Allow-Origin:
      - "*"
      X-Content-Type-Options:
      - nosniff
      X-Powered-By:
      - Phusion Passenger 6.0.2
      Server:
      - nginx/1.15.8 + Phusion Passenger 6.0.2
      Vary:
      - Accept-Encoding
      Age:
      - '299'
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 cdb2dba3874dd4d7b53213b8c63a0997.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - x8Ru2ogKqqsQTQxdjMz_t26o0qmYihHcPPd7txfqCUDXpyrC8ypx_A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 05 May 2019 11:19:00 GMT
recorded_with: VCR 3.0.3
